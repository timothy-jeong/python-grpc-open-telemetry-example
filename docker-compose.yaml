version: "3.8"

services:
  postgres:
    image: postgres:16
    container_name: postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=tasks
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - example-network
  fastapi-app:
    build:
      context: .
      dockerfile: Dockerfile.fastapi
    restart: unless-stopped
    container_name: fastapi-app
    ports:
      - 8000:8000
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/tasks
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - example-network

  grpc-app:
    build:
      context: .
      dockerfile: Dockerfile.grpc
    restart: unless-stopped
    container_name: grpc-app
    ports:
      - 50051:50051
      - 50052:50052
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/tasks
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - example-network

  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - example-network

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: unless-stopped
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
    env_file:
      - ./grafana/config.monitoring
    networks:
      - example-network

networks:
  example-network:
    driver: bridge

volumes:
  sqlite_data:
  postgres_data:
